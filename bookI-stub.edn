{:tag :html, :attrs nil, :content ({:tag :head, :attrs nil, :content ("\n" {:tag :title, :attrs nil, :content ("Euclid's Elements, Book I")} "\n" {:tag :link, :attrs {:rel "stylesheet", :type "text/css", :href "../elements.css"}, :content nil} "\n" {:tag :script, :attrs {:src "../elements.js"}, :content nil} "\n")} "\n" {:tag :body, :attrs nil, :content ("\n\n" {:tag :div, :attrs {:id "header"}, :content nil} "\n" {:tag :script, :attrs nil, :content ("loadHeader();")} "\n \n" {:tag :h3, :attrs nil, :content ("Table of contents")} "\n" {:tag :ul, :attrs nil, :content ("\n" {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "#defs"}, :content ("Definitions")} " (23)\n")} {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "#posts"}, :content ("Postulates")} " (5) \n")} {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "#cns"}, :content ("Common Notions")} " (5)\n")} {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "#props"}, :content ("Propositions")} " (48)\n" {:tag :p, :attrs nil, :content nil})} {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "#guide"}, :content ("Guide to Book I")} "\n")})} "\n\n" {:tag :a, :attrs {:name "defs"}, :content nil} {:tag :p, :attrs nil, :content nil} {:tag :hr, :attrs {:size "4"}, :content nil} {:tag :p, :attrs nil, :content ("\n")} {:tag :center, :attrs nil, :content ({:tag :h3, :attrs nil, :content ("Definitions")})} "\n\n" {:tag :dl, :attrs nil, :content ("\n")} {:tag :p, :attrs nil, :content nil} {:tag :dl, :attrs nil, :content ({:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI1.html"}, :content ("Definition 1")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("point")} " is that which has no part.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI2.html"}, :content ("Definition 2")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("line")} " is breadthless length.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI3.html"}, :content ("Definition 3")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("The ends of a line are points.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI4.html"}, :content ("Definition 4")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("straight line")} " is a line which lies evenly with the points on itself.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI5.html"}, :content ("Definition 5")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("surface")} " is that which has length and breadth only.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI6.html"}, :content ("Definition 6")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("The edges of a surface are lines.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI7.html"}, :content ("Definition 7")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("plane surface")} " is a surface which lies evenly with the straight lines on itself.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI8.html"}, :content ("Definition 8")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("plane angle")} " is the inclination to one another of two lines in a plane which meet one\n another and do not lie in a straight line.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI9.html"}, :content ("Definition 9")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("And when the lines containing the angle are straight, the angle is called " {:tag :i, :attrs nil, :content ("rectilinear.")} "\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI10.html"}, :content ("Definition 10")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("When a straight line standing on a straight line makes the adjacent angles equal to one another,\n each of the equal angles is " {:tag :i, :attrs nil, :content ("right,")} " and the straight line standing on the other is called a\n " {:tag :i, :attrs nil, :content ("perpendicular")} " to that on which it stands.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI11.html"}, :content ("Definition 11")} ".")} "\n\n")} {:tag :dd, :attrs nil, :content ("An " {:tag :i, :attrs nil, :content ("obtuse angle")} " is an angle greater than a right angle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI11.html"}, :content ("Definition 12")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("An " {:tag :i, :attrs nil, :content ("acute angle")} " is an angle less than a right angle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI13.html"}, :content ("Definition 13")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("boundary")} " is that which is an extremity of anything.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI13.html"}, :content ("Definition 14")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("figure")} " is that which is contained by any boundary or boundaries.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI15.html"}, :content ("Definition 15")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("circle")} " is a plane figure contained by one line such that all the straight lines falling\n upon it from one point among those lying within the figure equal one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI15.html"}, :content ("Definition 16")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("And the point is called the " {:tag :i, :attrs nil, :content ("center")} " of the circle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI15.html"}, :content ("Definition 17")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("diameter")} " of the circle is any straight line drawn through the center and terminated in\n both directions by the circumference of the circle, and such a straight line also bisects the circle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI15.html"}, :content ("Definition 18")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("A " {:tag :i, :attrs nil, :content ("semicircle")} " is the figure contained by the diameter and the circumference cut off by it. \n And the center of the semicircle is the same as that of the circle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI19.html"}, :content ("Definition 19")} ".")} "\n")} {:tag :dd, :attrs nil, :content ({:tag :i, :attrs nil, :content ("Rectilinear figures")} " are those which are contained by straight lines, " {:tag :i, :attrs nil, :content ("trilateral")} "\n figures being those contained by three, " {:tag :i, :attrs nil, :content ("quadrilateral")} " those contained by four, and\n " {:tag :i, :attrs nil, :content ("multilateral")} " those contained by more than four straight lines.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI20.html"}, :content ("Definition 20")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("Of trilateral figures, an " {:tag :i, :attrs nil, :content ("equilateral triangle")} " is that which has its three sides equal, an\n " {:tag :i, :attrs nil, :content ("isosceles triangle")} " that which has two of its sides alone equal, and a " {:tag :i, :attrs nil, :content ("scalene triangle")} "\n that which has its three sides unequal.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI20.html"}, :content ("Definition 21")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("Further, of trilateral figures, a " {:tag :i, :attrs nil, :content ("right-angled triangle")} " is that which has a right angle, an\n " {:tag :i, :attrs nil, :content ("obtuse-angled triangle")} " that which has an obtuse angle, and an " {:tag :i, :attrs nil, :content ("acute-angled triangle")} "\n that which has its three angles acute.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI22.html"}, :content ("Definition 22")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("Of quadrilateral figures, a " {:tag :i, :attrs nil, :content ("square")} " is that which is both equilateral and right-angled; an\n " {:tag :i, :attrs nil, :content ("oblong")} " that which is right-angled but not equilateral; a " {:tag :i, :attrs nil, :content ("rhombus")} " that which is\n equilateral but not right-angled; and a " {:tag :i, :attrs nil, :content ("rhomboid")} " that which has its opposite sides and angles\n equal to one another but is neither equilateral nor right-angled.  And let quadrilaterals other than\n these be called " {:tag :i, :attrs nil, :content ("trapezia.")} "\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "defI23.html"}, :content ("Definition 23")})} "\n")} {:tag :dd, :attrs nil, :content ({:tag :i, :attrs nil, :content ("Parallel")} " straight lines are straight lines which, being in the same plane and being\n produced indefinitely in both directions, do not meet one another in either direction.\n")})} "\n\n" {:tag :p, :attrs nil, :content nil} {:tag :center, :attrs nil, :content ({:tag :h3, :attrs nil, :content ({:tag :a, :attrs {:name "posts"}, :content ("Postulates")})})} "\n\nLet the following be postulated:\n" {:tag :dl, :attrs nil, :content ("\n\n")} {:tag :p, :attrs nil, :content nil} {:tag :dl, :attrs nil, :content ({:tag :dt, :attrs nil, :content ({:tag :font, :attrs {:color "bb0033"}, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "post1.html"}, :content ("Postulate 1")} ".")} "\n")})} {:tag :dd, :attrs nil, :content ("To draw a straight line from any point to any point.\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :font, :attrs {:color "bb0033"}, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "post2.html"}, :content ("Postulate 2")} ".")} "\n")})} {:tag :dd, :attrs nil, :content ("To produce a finite straight line continuously in a straight line.\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :font, :attrs {:color "bb0033"}, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "post3.html"}, :content ("Postulate 3")} ".")} "\n")})} {:tag :dd, :attrs nil, :content ("To describe a circle with any center and radius.\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "post4.html"}, :content ("Postulate 4")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("That all right angles equal one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :font, :attrs {:color "bb0033"}, :content ({:tag :a, :attrs {:href "post5.html"}, :content ("Postulate 5")} ".")})} "\n")} {:tag :dd, :attrs nil, :content ("That, if a straight line falling on two straight lines makes the interior angles on the same side\n less than two right angles, the two straight lines, if produced indefinitely, meet on that side on\n which are the angles less than the two right angles.\n")})} "\n\n" {:tag :center, :attrs nil, :content ({:tag :h3, :attrs nil, :content ({:tag :a, :attrs {:name "cns"}, :content ("Common Notions")})})} "\n" {:tag :dl, :attrs nil, :content ("\n")} {:tag :p, :attrs nil, :content nil} {:tag :dl, :attrs nil, :content ({:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "cn.html"}, :content ("Common notion 1")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("Things which equal the same thing also equal one another.\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "cn.html"}, :content ("Common notion 2")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("If equals are added to equals, then the wholes are equal.\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "cn.html"}, :content ("Common notion 3")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("If equals are subtracted from equals, then the remainders are equal.\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "cn.html"}, :content ("Common notion 4")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("Things which coincide with one another equal one another.\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "cn.html"}, :content ("Common notion 5")} ".")} "\n")} {:tag :dd, :attrs nil, :content ("The whole is greater than the part.\n")})} "\n\n" {:tag :center, :attrs nil, :content ({:tag :h3, :attrs nil, :content ({:tag :a, :attrs {:name "props"}, :content ("Propositions")})})} "\n" {:tag :dl, :attrs nil, :content ("\n")} {:tag :p, :attrs nil, :content nil} {:tag :dl, :attrs nil, :content ({:tag :dt, :attrs nil, :content ({:tag :font, :attrs {:color "bb0033"}, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI1.html"}, :content ("Proposition 1.")})} "\n")})} {:tag :dd, :attrs nil, :content ("To construct an equilateral triangle on a given finite straight line.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :font, :attrs {:color "bb0033"}, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI2.html"}, :content ("Proposition 2.")})} "\n")})} {:tag :dd, :attrs nil, :content ("To place a straight line equal to a given straight line with one end at a given point.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :font, :attrs {:color "bb0033"}, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("Proposition 3.")})} "\n")})} {:tag :dd, :attrs nil, :content ("To cut off from the greater of two given unequal straight lines a straight line equal to the less.\n\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI4.html"}, :content ("Proposition 4.")})} "\n")} {:tag :dd, :attrs nil, :content ("If two triangles have two sides equal to two sides respectively, and have the angles contained by\n the equal straight lines equal, then they also have the base equal to the base, the triangle equals\n the triangle, and the remaining angles  equal the remaining angles respectively, namely those\n opposite the equal sides.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI5.html"}, :content ("Proposition 5.")})} "\n")} {:tag :dd, :attrs nil, :content ("In isosceles triangles the angles at the base equal one another, and, if the equal straight lines\n are produced further, then the angles under the base equal one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI6.html"}, :content ("Proposition 6.")})} "\n")} {:tag :dd, :attrs nil, :content ("If in a triangle two angles equal one another, then the sides opposite the equal angles also equal\n one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI7.html"}, :content ("Proposition 7.")})} "\n")} {:tag :dd, :attrs nil, :content ("Given two straight lines constructed from the ends of a straight line and meeting in a point,\n there cannot be constructed from the ends of the same straight line, and on the same side of it, two\n other straight lines meeting in another point and equal to the former two respectively, namely each\n equal to that from the same end.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI8.html"}, :content ("Proposition 8.")})} "\n")} {:tag :dd, :attrs nil, :content ("If two triangles have the two sides equal to two sides respectively, and also have the base equal\n to the base, then they also have the angles equal which are contained by the equal straight lines.\n\n" {:tag :font, :attrs {:color "bb0033"}, :content ("\n")} {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI9.html"}, :content ("Proposition 9.")})} "\n")} {:tag :dd, :attrs nil, :content ("To bisect a given rectilinear angle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI10.html"}, :content ("Proposition 10.")})} "\n")} {:tag :dd, :attrs nil, :content ("To bisect a given finite straight line.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI11.html"}, :content ("Proposition 11.")})} "\n")} {:tag :dd, :attrs nil, :content ("To draw a straight line at right angles to a given straight line from a given point on it.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI12.html"}, :content ("Proposition 12.")})} "\n")} {:tag :dd, :attrs nil, :content ("To draw a straight line perpendicular to a given infinite straight line from a given point not on\n it.\n\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI13.html"}, :content ("Proposition 13.")})} "\n")} {:tag :dd, :attrs nil, :content ("If a straight line stands on a straight line, then it makes either two right angles or angles\n whose sum equals two right angles.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI14.html"}, :content ("Proposition 14.")})} "\n")} {:tag :dd, :attrs nil, :content ("If with any straight line, and at a point on it, two straight lines not lying on the same side\n make the sum of the adjacent angles equal to two right angles, then the two straight lines are in a\n straight line with one another. \n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI15.html"}, :content ("Proposition 15.")})} "\n")} {:tag :dd, :attrs nil, :content ("If two straight lines cut one another, then they make the vertical angles equal to one another.\n" {:tag :p, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI15.html#cor"}, :content ("Corollary.")})} "\nIf two straight lines cut one another, then they will make the angles at the point of section equal to\n four right angles.\n\n")} {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI16.html"}, :content ("Proposition 16.")})} "\n")} {:tag :dd, :attrs nil, :content ("In any triangle, if one of the sides is produced, then the exterior angle is greater than either\n of the interior and opposite angles.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI17.html"}, :content ("Proposition 17.")})} "\n")} {:tag :dd, :attrs nil, :content ("In any triangle the sum of any two angles is less than two right angles.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI18.html"}, :content ("Proposition 18.")})} "\n")} {:tag :dd, :attrs nil, :content ("In any triangle the angle opposite the greater side is greater.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI19.html"}, :content ("Proposition 19.")})} "\n")} {:tag :dd, :attrs nil, :content ("In any triangle the side opposite the greater angle is greater.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI20.html"}, :content ("Proposition 20.")})} "\n")} {:tag :dd, :attrs nil, :content ("In any triangle the sum of any two sides is greater than the remaining one.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI21.html"}, :content ("Proposition 21.")})} "\n")} {:tag :dd, :attrs nil, :content ("If from the ends of one of the sides of a triangle two straight lines are constructed meeting\n within the triangle, then the sum of the straight lines so constructed is less than the sum of the\n remaining two sides of the triangle, but the constructed straight lines contain a greater angle than\n the angle contained by the remaining two sides.\n\n" {:tag :font, :attrs {:color "bb0033"}, :content ("\n")} {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI22.html"}, :content ("Proposition 22.")})} "\n")} {:tag :dd, :attrs nil, :content ("To construct a triangle out of three straight lines which equal three given straight lines: thus\n it is necessary that the sum of any two of the straight lines should be greater than the remaining\n one.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI23.html"}, :content ("Proposition 23.")})} "\n")} {:tag :dd, :attrs nil, :content ("To construct a rectilinear angle equal to a given rectilinear angle on a given straight line and\n at a point on it.\n\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI24.html"}, :content ("Proposition 24.")})} "\n")} {:tag :dd, :attrs nil, :content ("If two triangles have two sides equal to two sides respectively, but have one of the angles\n contained by the equal straight lines greater than the other, then they also have the base greater\n than the base.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI25.html"}, :content ("Proposition 25.")})} "\n")} {:tag :dd, :attrs nil, :content ("If two triangles have two sides equal to two sides respectively, but have the base greater than\n the base, then they also have the one of the angles contained by the equal straight lines greater\n than the other.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI26.html"}, :content ("Proposition 26.")})} "\n")} {:tag :dd, :attrs nil, :content ("If two triangles have two angles equal to two angles respectively, and one side equal to one side,\n namely, either the side adjoining the equal angles, or that opposite one of the equal angles, then\n the remaining sides equal the remaining sides and the remaining angle equals the remaining angle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI27.html"}, :content ("Proposition 27.")})} "\n")} {:tag :dd, :attrs nil, :content ("If a straight line falling on two straight lines makes the alternate angles equal to one another,\n then the straight lines are parallel to one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI28.html"}, :content ("Proposition 28.")})} "\n")} {:tag :dd, :attrs nil, :content ("If a straight line falling on two straight lines makes the exterior angle equal to the interior\n and opposite angle on the same side, or the sum of the interior angles on the same side equal to two\n right angles, then the straight lines are parallel to one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI29.html"}, :content ("Proposition 29.")})} "\n")} {:tag :dd, :attrs nil, :content ("A straight line falling on parallel straight lines makes the alternate angles equal to one\n another, the exterior angle equal to the interior and opposite angle, and the sum of the interior\n angles on the same side equal to two right angles.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI30.html"}, :content ("Proposition 30.")})} "\n")} {:tag :dd, :attrs nil, :content ("Straight lines parallel to the same straight line are also parallel to one another.\n\n" {:tag :font, :attrs {:color "bb0033"}, :content ("\n")} {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI31.html"}, :content ("Proposition 31.")})} "\n")} {:tag :dd, :attrs nil, :content ("To draw a straight line through a given point parallel to a given straight line.\n\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI32.html"}, :content ("Proposition 32.")})} "\n")} {:tag :dd, :attrs nil, :content ("In any triangle, if one of the sides is produced, then the exterior angle equals the sum of the\n two interior and opposite angles, and the sum of the three interior angles of the triangle equals two\n right angles.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI33.html"}, :content ("Proposition 33.")})} "\n")} {:tag :dd, :attrs nil, :content ("Straight lines which join the ends of equal and parallel straight lines in the same directions are themselves equal and parallel.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI34.html"}, :content ("Proposition 34.")})} "\n")} {:tag :dd, :attrs nil, :content ("In parallelogrammic areas the opposite sides and angles equal one another, and the diameter\n bisects the areas.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI35.html"}, :content ("Proposition 35.")})} "\n")} {:tag :dd, :attrs nil, :content ("Parallelograms which are on the same base and in the same parallels equal one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI36.html"}, :content ("Proposition 36.")})} "\n")} {:tag :dd, :attrs nil, :content ("Parallelograms which are on equal bases and in the same parallels equal one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI37.html"}, :content ("Proposition 37.")})} "\n")} {:tag :dd, :attrs nil, :content ("Triangles which are on the same base and in the same parallels equal one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI38.html"}, :content ("Proposition 38.")})} "\n")} {:tag :dd, :attrs nil, :content ("Triangles which are on equal bases and in the same parallels equal one another.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI39.html"}, :content ("Proposition 39.")})} "\n")} {:tag :dd, :attrs nil, :content ("Equal triangles which are on the same base and on the same side are also in the same parallels.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI40.html"}, :content ("Proposition 40.")})} "\n")} {:tag :dd, :attrs nil, :content ("Equal triangles which are on equal bases and on the same side are also in the same parallels.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI41.html"}, :content ("Proposition 41.")})} "\n")} {:tag :dd, :attrs nil, :content ("If a parallelogram has the same base with a triangle and is in the same parallels, then the\n parallelogram is double the triangle.\n\n" {:tag :font, :attrs {:color "bb0033"}, :content ("\n")} {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI42.html"}, :content ("Proposition 42.")})} "\n")} {:tag :dd, :attrs nil, :content ("To construct a parallelogram equal to a given triangle in a given rectilinear angle.\n\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI43.html"}, :content ("Proposition 43.")})} "\n")} {:tag :dd, :attrs nil, :content ("In any parallelogram the complements of the parallelograms about the diameter equal one another.\n\n" {:tag :font, :attrs {:color "bb0033"}, :content ("\n")} {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI44.html"}, :content ("Proposition 44.")})} "\n")} {:tag :dd, :attrs nil, :content ("To a given straight line in a given rectilinear angle, to apply a parallelogram equal to a given\n triangle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI45.html"}, :content ("Proposition 45.")})} "\n")} {:tag :dd, :attrs nil, :content ("To construct a parallelogram equal to a given rectilinear figure in a given rectilinear angle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI46.html"}, :content ("Proposition 46.")})} "\n")} {:tag :dd, :attrs nil, :content ("To describe a square on a given straight line.\n\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI47.html"}, :content ("Proposition 47.")})} "\n")} {:tag :dd, :attrs nil, :content ("In right-angled triangles the square on the side opposite the right angle equals the sum of the\n squares on the sides containing the right angle.\n\n" {:tag :p, :attrs nil, :content nil})} {:tag :dt, :attrs nil, :content ({:tag :b, :attrs nil, :content ({:tag :a, :attrs {:href "propI48.html"}, :content ("Proposition 48.")})} "\n")} {:tag :dd, :attrs nil, :content ("If in a triangle the square on one of the sides equals the sum of the squares on the remaining two\n sides of the triangle, then the angle contained by the remaining two sides of the triangle is right.\n")})} "\n\n" {:tag :p, :attrs nil, :content nil} {:tag :hr, :attrs {:size "4"}, :content nil} {:tag :p, :attrs nil, :content ("\n" {:tag :a, :attrs {:name "guide"}, :content nil})} {:tag :h2, :attrs nil, :content ("Guide")} "\n\n" {:tag :h4, :attrs nil, :content ("About the Definitions")} "\n\nThe " {:tag :i, :attrs nil, :content ("Elements")} " begins with a list of definitions.  Some of these indicate little more than certain concepts will be discussed, such as " {:tag :a, :attrs {:href "defI1.html"}, :content ("Def.I.1")} ", " {:tag :a, :attrs {:href "defI2.html"}, :content ("Def.I.2")} ", and " {:tag :a, :attrs {:href "defI5.html"}, :content ("Def.I.5")} ", which\nintroduce the terms point, line, and surface. (Note that for Euclid, the concept of line includes curved lines.) Others are substantial definitions which actually describe new concepts in terms of old ones.  For example, " {:tag :a, :attrs {:href "defI10.html"}, :content ("Def.I.10")} " defines a " {:tag :i, :attrs nil, :content ("right angle")} " as one of two equal adjacent angles made when one straight line meets another.  Other definitions look like they’re substantial, but actually are not. For instance, " {:tag :a, :attrs {:href "defI4.html"}, :content ("Def.I.4")} " says a " {:tag :i, :attrs nil, :content ("straight line")} " “is a line which lies evenly with the points on itself.”  No where in the " {:tag :i, :attrs nil, :content ("Elements")} " is the defining phrase “which lies evenly with the points on itself” applicable.  Thus, this definition indicates, at most, that some lines under discussion will be straight lines.\n\n" {:tag :p, :attrs nil, :content ("It has been suggested that the definitions were added to the " {:tag :i, :attrs nil, :content ("Elements")} " sometime after Euclid wrote them.  Another possibility is that they are actually from a different work, perhaps older. In " {:tag :a, :attrs {:href "defI22.html"}, :content ("Def.I.22")} " special kinds of quadrilaterals are defined including square, oblong (a rectangle that are not squares), rhombus (equilateral but not a square), and rhomboid (parallelogram but not a rhombus). Except for squares, these other shapes are not mentioned in the " {:tag :i, :attrs nil, :content ("Elements.")} "  Euclid does use parallelograms, but they’re not defined in this definition.  Also, the exclusive nature of some of these terms—the part that indicates not a square—is contrary to Euclid’s practice of accepting squares and rectangles as kinds of parallelograms.\n\n")} {:tag :h4, :attrs nil, :content ("About the Postulates")} "\n\nFollowing the list of definitions is a list of postulates.  Each postulate is an axiom—which means a statement which is accepted without proof— specific to the subject matter, in this case, plane geometry.  Most of them are constructions.  For instance, " {:tag :a, :attrs {:href "post1.html"}, :content ("Post.I.1")} " says a straight line can be drawn between two points, and " {:tag :a, :attrs {:href "post3.html"}, :content ("Post.I.3")} " says a circle can be drawn given a specified point to be the center and another point to be on the circumference.  The fourth postulate, " {:tag :a, :attrs {:href "post4.html"}, :content ("Post.I.4")} ", is not a construction, but says that all right angles are equal.\n\n" {:tag :h4, :attrs nil, :content ("About magnitudes and the Common Notions")} "\n\nThe Common Notions are also axioms, but they refer to magnitudes of various kinds.  The kind of magnitude that  appears most frequently is that of straight line.  Other important kinds are angles, plane figures, and solid figures\n\n" {:tag :p, :attrs nil, :content ("In proposition " {:tag :a, :attrs {:href "../bookIII/propIII16.html"}, :content ("III.16")} " (but nowhere else) angles with curved sides are compared with rectilinear angles which shows that rectilinear angles are to be considered as a special kind of plane angle.  That agrees with Euclid’s definition of them in " {:tag :a, :attrs {:href "defI9.html"}, :content ("I.Def.9")} " and " {:tag :a, :attrs {:href "defI8.html"}, :content ("I.Def.8")} ".\n\n")} {:tag :p, :attrs nil, :content ("Also in Book III, parts of circumferences of circles, that is, arcs, appear as magnitudes.  Only arcs of equal circles can be compared or added, so arcs of equal circles comprise a kind of magnitude, while arcs of unequal circles are magnitudes of different kinds.  These kinds are all different from straight lines.  Whereas areas of figures are comparable, different kinds of curves are not.\n\n")} {:tag :p, :attrs nil, :content ("Book V includes the general theory of ratios.  No particular kind of magnitude is specified in that book.  It may come as a surprise that ratios do not themselves form a kind of magnitude since they can be compared, but they cannot be added.  See the guide on Book V for more information.\n\n")} {:tag :p, :attrs nil, :content ("Number theory is treated in Books VII through IX.  It could be considered that numbers form a kind of magnitude as pointed out by Aristotle.\n\n")} {:tag :p, :attrs nil, :content ("Beginning in Book XI, solids are considered, and they form the last kind of magnitude discussed in the " {:tag :i, :attrs nil, :content ("Elements.")} "\n\n")} {:tag :h4, :attrs nil, :content ("The propositions")} "\n\nFollowing the definitions, postulates, and common notions, there are 48 propositions.  Each of these propositions includes a statement followed by a proof of the statement.  Each statement of the proof is logically justified by a definition, postulate, common notion, or an earlier proposition that has already been proven.  There are gaps in the logic of some of the proofs, and these are mentioned in the commentaries after the propositions.  Also included in the proof is a diagram illustrating the proof.\n\n" {:tag :p, :attrs nil, :content ("Some of the propositions are constructions.  A construction depends, ultimately, on the\nconstructive postulates about drawing lines and circles.  The first part of a proof for a constructive proposition is how to perform the construction.  The rest of the proof (usually the longer part), shows that the proposed construction actually satisfies the goal of the proposition.  In the list of propositions in each book, the constructions are displayed in red.\n\n")} {:tag :p, :attrs nil, :content ("Most of the propositions, however, are not constructions.  Their statements say that under certain conditions, certain other conditions logically follow.  For example, " {:tag :a, :attrs {:href "propI5.html"}, :content ("Prop.I.5")} " says that if a triangle has the property that two of its sides are equal, then it follows that the angles opposite these sides (called the “base angles”) are also equal.  Even the propositions that are not constructions may have constructions included in their proofs since auxiliary lines or circles may be needed in the explanation.  But the bulk of the proof is, as for the constructive propositions, a sequence of statements that are logically justified and which culminates in the statement of the proposition.\n\n")} {:tag :h4, :attrs nil, :content ("Logical structure of Book I")} "\n\nThe various postulates and common notions are frequently used in Book I.  Only two of the propositions rely solely on the postulates and axioms, namely, " {:tag :a, :attrs {:href "propI1.html"}, :content ("I.1")} " and " {:tag :a, :attrs {:href "propI4.html"}, :content ("I.4")} ".  The logical chains of propositions in Book I are longer than in the other books; there are long sequences of propositions each relying on the previous.\n\n" {:tag :p, :attrs nil, :content nil} {:tag :center, :attrs nil, :content ({:tag :table, :attrs {:border "10", :cellpadding "5"}, :content ("\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs {:colspan "3"}, :content ("Dependencies within Book I")})} "\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI1.html"}, :content ("1")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI2.html"}, :content ("2")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI4.html"}, :content ("4")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI5.html"}, :content ("5")} ", " {:tag :a, :attrs {:href "propI6.html"}, :content ("6")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI5.html"}, :content ("5")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI7.html"}, :content ("7")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI8.html"}, :content ("8")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI1.html"}, :content ("1")} ", " {:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI8.html"}, :content ("8")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI9.html"}, :content ("9")} ", " {:tag :a, :attrs {:href "propI11.html"}, :content ("11")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI1.html"}, :content ("1")} ", " {:tag :a, :attrs {:href "propI4.html"}, :content ("4")} ", " {:tag :a, :attrs {:href "propI9.html"}, :content ("9")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI10.html"}, :content ("10")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI8.html"}, :content ("8")} ", " {:tag :a, :attrs {:href "propI10.html"}, :content ("10")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI12.html"}, :content ("12")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI11.html"}, :content ("11")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI13.html"}, :content ("13")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI14.html"}, :content ("14")} ", " {:tag :a, :attrs {:href "propI15.html"}, :content ("15")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI4.html"}, :content ("4")} ", " {:tag :a, :attrs {:href "propI10.html"}, :content ("10")} ", " {:tag :a, :attrs {:href "propI15.html"}, :content ("15")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI16.html"}, :content ("16")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI27.html"}, :content ("27")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI13.html"}, :content ("13")} ", " {:tag :a, :attrs {:href "propI16.html"}, :content ("16")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI17.html"}, :content ("17")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI5.html"}, :content ("5")} ", " {:tag :a, :attrs {:href "propI16.html"}, :content ("16")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI18.html"}, :content ("18")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI5.html"}, :content ("5")} ", " {:tag :a, :attrs {:href "propI18.html"}, :content ("18")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI19.html"}, :content ("19")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI5.html"}, :content ("5")} ", " {:tag :a, :attrs {:href "propI19.html"}, :content ("19")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI20.html"}, :content ("20")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI16.html"}, :content ("16")} ", " {:tag :a, :attrs {:href "propI20.html"}, :content ("20")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI21.html"}, :content ("21")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI20.html"}, :content ("20")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI22.html"}, :content ("22")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI8.html"}, :content ("8")} ", " {:tag :a, :attrs {:href "propI22.html"}, :content ("22")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI23.html"}, :content ("23")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI4.html"}, :content ("4")} ", " {:tag :a, :attrs {:href "propI5.html"}, :content ("5")} ", " {:tag :a, :attrs {:href "propI19.html"}, :content ("19")} ", " {:tag :a, :attrs {:href "propI23.html"}, :content ("23")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI24.html"}, :content ("24")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI4.html"}, :content ("4")} ", " {:tag :a, :attrs {:href "propI24.html"}, :content ("24")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI25.html"}, :content ("25")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI4.html"}, :content ("4")} ", " {:tag :a, :attrs {:href "propI16.html"}, :content ("16")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI26.html"}, :content ("26")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI13.html"}, :content ("13")} ", " {:tag :a, :attrs {:href "propI15.html"}, :content ("15")} ", " {:tag :a, :attrs {:href "propI27.html"}, :content ("27")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI28.html"}, :content ("28")} ", " {:tag :a, :attrs {:href "propI29.html"}, :content ("29")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI29.html"}, :content ("29")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI30.html"}, :content ("30")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI23.html"}, :content ("23")} ", " {:tag :a, :attrs {:href "propI27.html"}, :content ("27")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI31.html"}, :content ("31")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI13.html"}, :content ("13")} ", " {:tag :a, :attrs {:href "propI29.html"}, :content ("29")} ", " {:tag :a, :attrs {:href "propI31.html"}, :content ("31")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI32.html"}, :content ("32")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI4.html"}, :content ("4")} ", " {:tag :a, :attrs {:href "propI27.html"}, :content ("27")} ", " {:tag :a, :attrs {:href "propI29.html"}, :content ("29")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI33.html"}, :content ("33")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI4.html"}, :content ("4")} ", " {:tag :a, :attrs {:href "propI26.html"}, :content ("26")} ", " {:tag :a, :attrs {:href "propI29.html"}, :content ("29")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI34.html"}, :content ("34")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI43.html"}, :content ("43")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI4.html"}, :content ("4")} ", " {:tag :a, :attrs {:href "propI29.html"}, :content ("29")} ", " {:tag :a, :attrs {:href "propI34.html"}, :content ("34")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI35.html"}, :content ("35")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI33.html"}, :content ("33")} ", " {:tag :a, :attrs {:href "propI34.html"}, :content ("34")} ", " {:tag :a, :attrs {:href "propI35.html"}, :content ("35")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI36.html"}, :content ("36")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI31.html"}, :content ("31")} ", " {:tag :a, :attrs {:href "propI34.html"}, :content ("34")} ", " {:tag :a, :attrs {:href "propI35.html"}, :content ("35")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI37.html"}, :content ("37")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI31.html"}, :content ("31")} ", " {:tag :a, :attrs {:href "propI34.html"}, :content ("34")} ", " {:tag :a, :attrs {:href "propI36.html"}, :content ("36")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI38.html"}, :content ("38")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI31.html"}, :content ("31")} ",  " {:tag :a, :attrs {:href "propI37.html"}, :content ("37")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI39.html"}, :content ("39")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI31.html"}, :content ("31")} ",  " {:tag :a, :attrs {:href "propI38.html"}, :content ("38")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI40.html"}, :content ("40")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI34.html"}, :content ("34")} ",  " {:tag :a, :attrs {:href "propI37.html"}, :content ("37")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI41.html"}, :content ("41")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI10.html"}, :content ("10")} ", " {:tag :a, :attrs {:href "propI23.html"}, :content ("23")} ", " {:tag :a, :attrs {:href "propI31.html"}, :content ("31")} ", " {:tag :a, :attrs {:href "propI38.html"}, :content ("38")} ", " {:tag :a, :attrs {:href "propI41.html"}, :content ("41")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI42.html"}, :content ("42")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI15.html"}, :content ("15")} ", " {:tag :a, :attrs {:href "propI29.html"}, :content ("29")} ", " {:tag :a, :attrs {:href "propI31.html"}, :content ("31")} ", " {:tag :a, :attrs {:href "propI42.html"}, :content ("42")} ", " {:tag :a, :attrs {:href "propI43.html"}, :content ("43")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI44.html"}, :content ("44")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI14.html"}, :content ("14")} ", " {:tag :a, :attrs {:href "propI29.html"}, :content ("29")} ", " {:tag :a, :attrs {:href "propI30.html"}, :content ("30")} ", " {:tag :a, :attrs {:href "propI33.html"}, :content ("33")} ", " {:tag :a, :attrs {:href "propI34.html"}, :content ("34")} ", " {:tag :a, :attrs {:href "propI42.html"}, :content ("42")} ", " {:tag :a, :attrs {:href "propI44.html"}, :content ("44")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI45.html"}, :content ("45")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI11.html"}, :content ("11")} ", " {:tag :a, :attrs {:href "propI29.html"}, :content ("29")} ", " {:tag :a, :attrs {:href "propI31.html"}, :content ("31")} ", " {:tag :a, :attrs {:href "propI34.html"}, :content ("34")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI46.html"}, :content ("46")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI4.html"}, :content ("4")} ", " {:tag :a, :attrs {:href "propI14.html"}, :content ("14")} ", " {:tag :a, :attrs {:href "propI31.html"}, :content ("31")} ", " {:tag :a, :attrs {:href "propI41.html"}, :content ("41")} ", " {:tag :a, :attrs {:href "propI46.html"}, :content ("46")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI47.html"}, :content ("47")})})} "\n\n" {:tag :tr, :attrs nil, :content ({:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI3.html"}, :content ("3")} ", " {:tag :a, :attrs {:href "propI8.html"}, :content ("8")} ", " {:tag :a, :attrs {:href "propI11.html"}, :content ("11")} ", " {:tag :a, :attrs {:href "propI47.html"}, :content ("47")})} "\n" {:tag :td, :attrs nil, :content ({:tag :a, :attrs {:href "propI48.html"}, :content ("48")})})} "\n\n")})} "\n\n" {:tag :div, :attrs {:id "footer"}, :content nil} "\n" {:tag :script, :attrs nil, :content ("\n  loadFooter(\"1996\");\n")} "\n")} "\n")}